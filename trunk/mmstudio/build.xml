<project name="mmstudio" basedir="." default="jar">
	<!-- Not sure how it got the name "MMJ_", but we'd need significant
	     planning to change it -->
	<property name="product" value="MMJ_"/>

	<import file="../buildscripts/javabuild.xml"/>

	<path id="project.classpath">
		<!-- Keep alphabetical, please -->
		<pathelement location="${mm.java.lib.beanshell}"/>
		<pathelement location="${mm.java.lib.commons-math}"/>
		<pathelement location="${mm.java.lib.gson}"/>
		<pathelement location="${mm.java.lib.imagej}"/>
		<pathelement location="${mm.java.lib.mmcorej}"/>
		<pathelement location="${mm.java.lib.rsyntaxtextarea}"/>
		<pathelement location="${mm.java.lib.scifio}"/>
		<pathelement location="${mm.java.lib.swing-layout}"/>
	</path>

	<path id="project.linked.jars">
		<pathelement location="${mm.java.lib.imagej}"/>
		<pathelement location="${mm.java.lib.mmcorej}"/>
	</path>

	<!-- Override javabuild.xml's 'copy-files' target -->
	<property name="src.pkgroot" location="${srcdir}/org/micromanager"/>
	<property name="int.pkgroot" location="${intdir}/org/micromanager"/>
	<target name="copy-files" depends="mm.javabuild.copy-files">
		<copy todir="${int.pkgroot}/icons">
			<fileset dir="${src.pkgroot}/icons">
				<include name="**/*.png"/>
				<include name="**/*.gif"/>
			</fileset>
		</copy>
		<copy todir="${int.pkgroot}/conf2">
			<fileset dir="${src.pkgroot}/conf2" includes="*.html"/>
		</copy>
		<copy tofile="${intdir}/plugins.config" file="bin/plugins_mmstudio.config"/>
	</target>

	<!-- Override javabuild.xml's 'jar' target, to add manifest -->
	<target name="jar" depends="compile,copy-files">
		<!-- Note: there is a ${srcdir}/MANIFEST.MF in the repository,
		     which is probably used by the OS X build. -->
		<property name="manifest" location="${intdir}/MANIFEST.MF"/>
		<manifest file="${manifest}">
			<attribute name="Main-Class" value="org.micromanager.MMStudioMainFrame"/>
			<!-- TODO Add version information here -->
		</manifest>

		<mkdir dir="${outdir}"/>
		<mm-jar basedir="${intdir}" destfile="${jarfile}" manifest="${manifest}"/>
	</target>
</project>
