#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT(FULL-PACKAGE-NAME, VERSION, BUG-REPORT-ADDRESS)
AC_CONFIG_MACRO_DIR([../m4])
AC_CONFIG_SRCDIR([DemoCamera/DemoCamera.cpp])
AC_CANONICAL_HOST
AM_INIT_AUTOMAKE
AC_PROG_LIBTOOL

m4_include([../configure.common])

# TODO: Following should decide whether adapters depending on BOOST get build
AX_BOOST_BASE([1.40.0])
AX_BOOST_THREAD
AX_BOOST_ASIO
AX_BOOST_SYSTEM

# Checks for header files.

# Checkfor libUSB 
AC_MSG_CHECKING(for libusb)
AC_FIND_FILE([usb.h], [/usr/include /usr/local/$ARCH/include], USBINCDIR)
if test x$USBINCDIR = xNO; then
   AC_MSG_RESULT([not found])
else
   AC_CHECK_HEADERS([$USBINCDIR/usb.h])
   if test -z "$LIBUSB" ; then
      case $host in
         *-*-linux*)
            LIBUSB="-lusb"
            ;;
         *)
            AC_FIND_FILE([libusb.a], [/usr/lib /usr/lib64 /usr/local/$ARCH/lib], USBLIBDIR)
            if test x$USBLIBDIR = xNO; then
               AC_MSG_RESULT(["libusb not found"])
            else
               AC_MSG_RESULT(["libusb.a" found])
               LIBUSB="$USBLIBDIR/libusb.a"
            fi
         ;;
      esac
   fi
fi
AC_SUBST(LIBUSB)
AM_CONDITIONAL([BUILD_USBMANAGER], [test -f "$LIBUSB"])

# Only build PVCAM if header files present.
AC_MSG_CHECKING(for Pvcam)
AC_FIND_FILE([pvcam.h], [/usr/include/pvcam /Library/Frameworks/PVCAM.framework/Headers], PVCAMINCDIR)
if test x$PVCAMINCDIR = xNO; then
   AC_MSG_RESULT([not found])
fi
AM_CONDITIONAL([BUILD_PVCAM], [test -f "$PVCAMINCDIR/pvcam.h"])
if test -f "$PVCAMINCDIR/pvcam.h" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Same for QCam
AC_MSG_CHECKING(for QCam)
AM_CONDITIONAL([BUILD_QCAM],[test -f "/Library/Frameworks/QCam.framework/Headers/QCamApi.h"])
if test -f "/Library/Frameworks/QCam.framework/Headers/QCamApi.h" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Same for Scion
AC_MSG_CHECKING(for Scion)
AM_CONDITIONAL([BUILD_SCION],[test -f "/Library/Frameworks/sfwlib.framework/Headers/sfwlib.h"])
if test -f "/Library/Frameworks/sfwlib.framework/Headers/sfwlib.h"; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Same for Diagnostic Spot
AC_MSG_CHECKING(for Diagnostic Spot)
AM_CONDITIONAL([BUILD_SPOT],[test -f "/Library/Frameworks/SpotCam.framework/Headers/SpotCam.h"])
if test -f "/Library/Frameworks/SpotCam.framework/Headers/SpotCam.h"; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# and for Firewire cameras (libdc1394) 
AC_MSG_CHECKING(for libdc1394)
AC_FIND_FILE([dc1394], [/usr/include /usr/local/$ARCH/include], DC1394INCDIR)
if test x$DC1394INCDIR = xNO; then
   AC_MSG_RESULT([not found])
else
   AC_CHECK_HEADERS([$DC1394INCDIR/dc1394/dc1394.h])
   if test -z "$LIBDC1394" ; then
      case $host in
         *-*-linux*)
            LIBDC1394="-ldc1394"
            ;;
         *)
            AC_FIND_FILE([libdc1394.a], [/usr/lib /usr/lib64 /usr/local/$ARCH/lib], DC1394LIBDIR)
            if test x$DC1394LIBDIR = xNO; then
               AC_MSG_RESULT(["libdc1394 not found"])
            else
               AC_MSG_RESULT(["libdc1394.a" found])
               LIBDC1394="$DC1394LIBDIR/libdc1394.a"
            fi
         ;;
      esac
   fi
fi
AC_SUBST(LIBDC1394)
AM_CONDITIONAL([BUILD_DC1394], [test -n "$LIBDC1394"])

# Andor cameras on linux 
AC_MSG_CHECKING(for Andor cameras)
AM_CONDITIONAL([BUILD_ANDOR],[test -f "/usr/local/include/atmcdLXd.h"])
if test -f "/usr/local/include/atmcdLXd.h" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Andor laser combiner on linux 
AC_MSG_CHECKING(for Andor laser combiner)
AM_CONDITIONAL([BUILD_ANDORLASERCOMBINER],[test -f "/usr/local/include/ALC_REV.h"])
if test -f "/usr/local/include/ALC_REV.h" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Sensicam on linux 
AC_MSG_CHECKING(for Sensicam)
AM_CONDITIONAL([BUILD_SENSICAM],[test -f "/usr/local/include/sensicam.h"])
if test -f "/usr/local/include/sensicam.h"; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# SimpleCam - GPhoto
PKG_PROG_PKG_CONFIG
PKG_CHECK_MODULES([GPHOTO2], [libgphoto2 >= 2.1.10], [have_libgphoto2=yes], [have_libgphoto2=no])

if test x$have_libgphoto2 = xno; then
   buildsc=false
   AC_MSG_RESULT([not found])
else
   buildsc=true
   AC_MSG_RESULT([found])
   GPHOTO2_VERSION=`$PKG_CONFIG --modversion libgphoto2`
   GPHOTO2_PORT_VERSION=`$PKG_CONFIG --modversion libgphoto2_port`
   GPHOTO2_LIBDIR=`$PKG_CONFIG --variable=libdir libgphoto2`
   LIBGPHOTO2=`$PKG_CONFIG --variable=libdir libgphoto2`/libgphoto2.la
fi

# On mac, install dynamic gphoto2 libraries 
case $host in
   *apple-darwin*)
      AC_SUBST([INSTALL_LIBGPHOTO], [install_macos])
      ;;
   *)
      AC_SUBST([INSTALL_LIBGPHOTO], [install_linux])
      ;;
esac
AC_SUBST(GPHOTO2_CFLAGS)
AC_SUBST(GPHOTO2_LIBS)
AC_SUBST(GPHOTO2_LIBDIR)
AC_SUBST(GPHOTO2_VERSION)
AC_SUBST(GPHOTO2_PORT_VERSION)
AC_SUBST(LIBGPHOTO2)

# LibFreeImage
AC_MSG_CHECKING(for libFreeImage headers)
AM_CONDITIONAL([LIBFREEIMAGEFOUND], [test -f "../../3rdpartypublic/FreeImage/Dist/FreeImage"])
if test -f "../../3rdpartypublic/FreeImage/Dist/FreeImage.h"; then
   AC_MSG_RESULT([found])
   AC_FIND_FILE([libfreeimage.a], [/usr/lib /usr/lib64 /usr/local/$ARCH/lib], FREEIMAGELIBDIR)
   if test x$FREEIMAGELIBDIR = xNO; then
      buildsc=false
      AC_MSG_RESULT(["libfreeimage.a" not found...])
   else
      AC_MSG_RESULT(["libfreeimage.a" found])
      AC_SUBST(LIBFREEIMAGE, "$FREEIMAGELIBDIR/libfreeimage.a")
      AC_SUBST(LIBFREEIMAGE_CXXFLAGS, "-I../../../3rdpartypublic/FreeImage/Dist -I../../../3rdpartypublic/FreeImage/Wrapper/FreeImagePlus ")
   fi
else
   buildsc=false
   AC_MSG_RESULT([not found: To build the GPhoto device adapter download and install FreeImage in ../../3rdpartypublic/FreeImage])
fi
AM_CONDITIONAL([BUILD_SIMPLECAM], [test x$buildsc = xtrue])

# Video4linux
AC_MSG_CHECKING(for Video4linux2)
AM_CONDITIONAL([BUILD_V4L2],[test -f "/usr/include/libv4l2.h"])
if test -f "/usr/include/libv4l2.h"; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# ITC on linux 
AC_MSG_CHECKING(for ITC)
AM_CONDITIONAL([BUILD_ITC],[test -f "/usr/local/include/ITC18.h"])
if test -f "/usr/local/include/ITC18.h" ; then
   AC_MSG_RESULT([found])
else
   AC_MSG_RESULT([not found])
fi

# Only build ... when the code is there
AM_CONDITIONAL([BUILD_TEST],[test -f "Test/Test.h"])
if test -f "Test/Test.h"; then
   TEST=Test
   TESTMAKEFILE="Test/Makefile"
else
   TEST=
   TESTMAKEFILE=
fi
AC_SUBST(TEST)

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE


# On the Mac we need some frameworks that can be in the way on Linux
case $host in 
   *apple-darwin*)
      AC_MSG_CHECKING(pvcam linker flags)
      PVCAMFRAMEWORKS="-framework PVCAM"
      AC_MSG_RESULT($PVCAMFRAMEWORKS)
      AC_MSG_CHECKING(diagnostic spot linker flags)
      SPOTFRAMEWORKS="-framework SpotCam"
      AC_MSG_RESULT($SPOTFRAMEWORKS)
      AC_MSG_CHECKING(Serial adapter linker flags)
      SERIALFRAMEWORKS="-framework CoreFoundation -framework IOKit"
      AC_MSG_RESULT($SERIALFRAMEWORKS)
      ;;
   *linux*)
      AC_MSG_CHECKING(pvcam linker flags)
      PVCAMFRAMEWORKS="-lpvcam"
      ;;
esac
AC_SUBST(PVCAMFRAMEWORKS)
AC_SUBST(SPOTFRAMEWORKS)
AC_SUBST(SERIALFRAMEWORKS)

# Micro-Manager libraries have a prefix & suffix to make them unique.  These are defined here:
case $host in
   *-*-linux*)
   MMSUFFIX=".so.0"
   MMPREFIX="libmmgr_dal_"
   ;;
esac
if test -z "$MMSUFFIX"; then
  MMSUFFIX=""
fi
if test -z "$MMPREFIX"; then
  MMPREFIX="mmgr_dal_"
fi

AC_MSG_CHECKING(library suffix)
AC_MSG_RESULT($MMSUFFIX)
AC_SUBST(MMSUFFIX)
AC_MSG_CHECKING(library prefix)
AC_MSG_RESULT($MMPREFIX)
AC_SUBST(MMPREFIX)

# Checks for library functions.
AC_HEADER_STDC
AC_CHECK_FUNCS([memset])

AC_CONFIG_FILES(Makefile AAAOTF/Makefile AOTF/Makefile Andor/Makefile AndorLaserCombiner/Makefile Arduino/Makefile ASIFW1000/Makefile ASIStage/Makefile ASIWPTR/Makefile CARVII/Makefile Cobolt/Makefile CoherentCube/Makefile Conix/Makefile Corvus/Makefile DTOpenLayer/Makefile DemoCamera/Makefile ImageProcessorChain/Makefile FreeSerialPort/Makefile ITC18/Makefile SerialManager/Makefile SimpleAutofocus/Makefile USBManager/Makefile LeicaDMI/Makefile LeicaDMR/Makefile Ludl/Makefile LudlLow/Makefile ZeissCAN/Makefile ZeissCAN29/Makefile Video4Linux/Makefile Vincent/Makefile kdv/Makefile K8055/Makefile K8061/Makefile MaestroServo/Makefile PVCAM/Makefile Neos/Makefile Nikon/Makefile NikonTE2000/Makefile ParallelPort/Makefile Pecon/Makefile PrecisExcite/Makefile Sapphire/Makefile ScionCam/Makefile Sensicam/Makefile SimpleCam/Makefile SpectralLMM5/Makefile Spot/Makefile SutterLambda/Makefile Thorlabs/Makefile ThorlabsDCxxxx/Makefile ThorlabsFilterWheel/Makefile ThorlabsSC10/Makefile Prior/Makefile PI/Makefile PI_GCS/Makefile Scientifica/Makefile Utilities/Makefile dc1394/Makefile QCam/Makefile XCite120PC_Exacte/Makefile Xcite/Makefile Yokogawa/Makefile)
AC_OUTPUT
