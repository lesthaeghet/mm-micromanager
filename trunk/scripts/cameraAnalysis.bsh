import org.jfree.data.xy.XYSeries;


img = ij.IJ.getImage();
ij.ImageStack stack = img.getImageStack();
sqrt2 = Math.sqrt(2);
ij.plugin.ImageCalculator calc = new ij.plugin.ImageCalculator();
XYSeries data = new XYSeries("");

for (int i=0; i <stack.getSize()/2; i++) {
	ip = stack.getProcessor(2*i + 1);
	ip2 = stack.getProcessor(2*i + 2);
	ij.process.ImageStatistics stats = ip.getStatistics();
	ipDiff = calc.run("Subtract create 32-bit", new ij.ImagePlus("1", ip), new ij.ImagePlus("2",ip2) );
	ij.process.ImageStatistics statsDiff = ipDiff.getStatistics();
	stdDev = statsDiff.stdDev/sqrt2;
	if (i>0) {
		gui.message("Mean:" +  stats.mean + " Std: " + stdDev + " PCF: " + stats.mean/(stdDev*stdDev) + " slope: " + 
		 ( (Math.log(stdDev) - Math.log(data.getY(i-1))) / (Math.log(stats.mean) - Math.log(data.getX(i-1)))) );
	}	
	data.add(stats.mean, stdDev);
}

plotData("No Fixed Pattern Noise", data, "Signal DN", "Noise DN", 100, 100, true, true);