# This file is part of a progressive rewrite of the GNU (autotools) build
# scripts. Please do not modify this file. Instead, please modify the legacy
# build files (without the .nextgen suffix). Changes to legacy files will be
# automatically detected and manually applied to the next-gen files.
# - Mark Tsuchida
#
# %nextgen_build_filename = mm_lib_opencv.m4
# %nextgen_build_replaces = ax_opencv.m4 904b6d2016853877d07a19ce948445c6

# Author: Mark Tsuchida
# Copyright: University of California, San Francisco, 2014
# License: BSD

# Check for OpenCV video capture
#
# Usage: MM_LIB_OPENCV
#
# First try to get the required flags from pkg-config. Since the pkg-config
# entry tends to be erroneous (especially on OS X), we verify that the link
# succeeds and fall back to just listing -l flags.
#
# Trial 1: get OPENCV_* from pkg-config
# Trial 2: ignore pkg-config, leave OPENCV_CPPFLAGS and OPENCV_LDFLAGS empty,
# and try our own OPENCV_LIBS.
#
# If OPENCV_INCDIR or OPENCV_LIBDIR is set, trial 1 is skipped, and the given
# directories are used in trial 2.
#
# OpenCV does not provide .la files (it is a CMake project), so the link tests
# below should be relatively reliable, at least when using OpenCV shared
# libraries on Linux or OS X. With a static-only OpenCV, it may be necessary to
# set the flags manually (including the transitive dependencies), at least on
# OS X.
AC_DEFUN([MM_LIB_OPENCV], [

AC_ARG_VAR([OPENCV_CPPFLAGS], [preprocessor flags for OpenCV])
AC_ARG_VAR([OPENCV_CFLAGS], [compiler flags for OpenCV])
AC_ARG_VAR([OPENCV_LDFLAGS], [linker flags for OpenCV])
AC_ARG_VAR([OPENCV_LIBS], [library flags for libdc1394])

AC_MSG_CHECKING([for OpenCV configuration])
test -n "$OPENCV_CPPFLAGS" && have_opencv=yes
test -n "$OPENCV_CFLAGS" && have_opencv=yes
test -n "$OPENCV_LDFLAGS" && have_opencv=yes
test -n "$OPENCV_LIBS" && have_opencv=yes

AS_IF([test "x$have_opencv" = xyes],
[
   AC_MSG_RESULT([user provided flag(s); will skip checks])
],
[
   AC_MSG_RESULT([no; will check if available])

   # defaults
   have_opencv=

   # libopencv_highgui depends on libopencv_imgproc, which in turn depends on
   # libopencv_core
   mm_lib_opencv_libs_simple=
   for module in highgui imgproc core
   do
      mm_lib_opencv_libs_simple="$mm_lib_opencv_libs_simple -lopencv_$module"
   done

   # fake loop (to exit with break)
   while true
   do
      try_pkgconfig=yes
      test -n "$OPENCV_INCDIR" && try_pkgconfig=no
      test -n "$OPENCV_LIBDIR" && try_pkgconfig=no

      AS_IF([test "x$try_pkgconfig" = xyes],
      [
      	MM_LIB_SET_FLAGS_PKGCONFIG([OPENCV], [opencv], [],
         [
            # Trial 1
            _MM_LIB_OPENCV_IFELSE([with flags from pkg-config], [have_opencv=yes])
         ])
      ])
      test "x$have_opencv" = xyes && break

      # Trial 2
      OPENCV_CPPFLAGS=
      OPENCV_CFLAGS=
      OPENCV_LDFLAGS=
      OPENCV_LIBS="$mm_lib_opencv_libs_simple"
      test -n "$OPENCV_INCDIR" && OPENCV_CPPFLAGS="-I$OPENCV_INCDIR"
      test -n "$OPENCV_LIBDIR" && OPENCV_LDFLAGS="-L$OPENCV_LIBDIR"
      _MM_LIB_OPENCV_IFELSE([with just $mm_lib_opencv_libs_simple], [have_opencv=yes])
      test "x$have_opencv" = xyes && break

      have_opencv=no
      OPENCV_CPPFLAGS=
      OPENCV_CFLAGS=
      OPENCV_LDFLAGS=
      OPENCV_LIBS=
      break
   done
])
])


#
# Sub-macros
#

AC_DEFUN([_MM_LIB_OPENCV_IFELSE], [
   MM_LIB_IFELSE([OPENCV], [OpenCV], [$1],
      [opencv/highgui.h], [cvGetCaptureProperty],
      [$2], [$3])
])
