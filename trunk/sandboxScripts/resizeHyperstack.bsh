import ij.*;
import ij.process.*;
import org.micromanager.utils.*;

/*
Arthur - 1/14/2011
This script demonstrates changing the size of each
of the four dimensions in a hyper image:
T, P, C, Z. Still to be implemented:

*/


imgp = IJ.getImage();
stack = imgp.getStack();
win = imgp.getWindow();
disp = imgp.getStack().acq_;

nChannelsOld = imgp.getNChannels();
nSlicesOld = imgp.getNSlices();
nFramesOld = imgp.getNFrames();
nPositionsOld = disp.getNumPositions();

nChannels = nChannelsOld + 1;
nFrames = nFramesOld + 1;
nSlices = nSlicesOld + 1;
nPositions = nPositionsOld + 1;

// Package private:
cs = win.cSelector;
zs = win.zSelector;
ts = win.tSelector;

// An instance of my AcquisitionVirtualStack:
stack.setSize(nChannels * nSlices * nFrames); // my stack
	
// Protected:
imgp.nChannels = nChannels;
imgp.nSlices = nSlices;
imgp.nFrames = nFrames;

// Package private:
win.nChannels = nChannels;
win.nSlices = nSlices;
win.nFrames = nFrames;

imgp.cip = JavaUtils.copyOfRange(imgp.cip,0,nChannels);
imgp.lut = JavaUtils.copyOfRange(imgp.lut,0,nChannels);	
imgp.cip[nChannels-1] = imgp.cip[0].duplicate();
lut0 = imgp.lut[0];
imgp.lut[nChannels-1] = new LUT(lut0,lut0.min,lut0.max);
imgp.setChannelsUpdated();

// Public:
if (win.hyperStack) {
   if (cs != null)
		cs.setMaximum(nChannels + 1);
   if (zs != null)
		zs.setMaximum(nSlices + 1);
   if (ts != null)
		ts.setMaximum(nFrames + 1);
} else {
	if (zs != null)
		zs.setMaximum(stack.getSize() + 1);
}

disp.setNumPositions(nPositions);

