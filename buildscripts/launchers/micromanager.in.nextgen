#!/bin/sh

# This file is part of a progressive rewrite of the GNU (autotools) build
# scripts. Please do not modify this file. Instead, please modify the legacy
# build files (without the .nextgen suffix). Changes to legacy files will be
# automatically detected and manually applied to the next-gen files.
# - Mark Tsuchida
#
# %nextgen_build_filename = micromanager.in

# Micro-Manager launcher for traditional-style Unix installation.
#
# (By traditional-style I mean that libraries and modules are in e.g.
# $PREFIX/lib/micro-manager and JARs and other files are in e.g.
# $PREFIX/share/micro-manager.)
#
# This script starts Micro-Manager as a stand-alone application, without the
# ImageJ toolbar.


# TODO If a system classpath is used at build time, that classpath should be
# used here, too (after appending the Micro-Manager JARs). Something like
# CLASSPATH=@CLASSPATH@.

CLASSPATH=
jardir=@jardir@
if test -n "$jardir"; then
   for jar in "$jardir"/*.jar; do
      if test -z "$CLASSPATH"; then
         CLASSPATH="$jar"
      else
         CLASSPATH="$CLASSPATH:$jar"
      fi
   done
fi

imagejjar=@imagejjar@
if test -n "$imagejjar"; then
   CLASSPATH="$imagejjar:$CLASSPATH"
fi

echo "class path = $CLASSPATH" 1>&2

java -Xmx1024M \
   -classpath "$CLASSPATH" \
   -Dmmcorej.library.loading.stderr.log=yes \
   -Dmmcorej.library.path="@pkglibdir@" \
   -Dorg.micromanager.plugin.path="@pkgdatadir@/mmplugins" \
   -Dorg.micromanager.autofocus.path="@pkgdatadir@/mmautofocus" \
   -Dorg.micromanager.beanshell.start.script="@pkgdatadir@/scripts/mm_beanshell_startup.bsh" \
   -Dorg.micromanager.default.config.file="@pkgdatadir@/MMConfig_demo.cfg" \
   org.micromanager.MMStudioMainFrame
