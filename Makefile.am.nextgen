# This file is part of a progressive rewrite of the GNU (autotools) build
# scripts. Please do not modify this file. Instead, please modify the legacy
# build files (without the .nextgen suffix). Changes to legacy files will be
# automatically detected and manually applied to the next-gen files.
# - Mark Tsuchida
#
# %nextgen_build_filename = Makefile.am
# %nextgen_build_replaces = Makefile.am f2040eadf52e7b97cadb1d5a5dc6567c

AUTOMAKE_OPTIONS = foreign
ACLOCAL_AMFLAGS = -I m4

if BUILD_MMCOREJ
MMCORE_DIR = MMCore
MMCOREJ_DIR = MMCoreJ_wrap
endif

if BUILD_MMCOREPY
MMCORE_DIR = MMCore
MMCOREPY_DIR = MMCorePy_wrap
endif

if BUILD_JAVA_APP
JAVA_APP_DIRS = mmstudio acqEngine autofocus plugins scripts
endif

if BUILD_SECRETDEVICEADAPTERS
SECRETDEVICEADAPTERS = SecretDeviceAdapters
endif

bin_SCRIPTS = buildscripts/launchers/micromanager

# TODO Define this in configure script? (See other uses.)
jardir = $(pkgdatadir)/jars

buildscripts/launchers/micromanager: $(srcdir)/buildscripts/launchers/micromanager.in
	sed \
		-e 's%@pkglibdir[@]%$(pkglibdir)%g' \
		-e 's%@pkgdatadir[@]%$(pkgdatadir)%g' \
		-e 's%@jardir[@]%$(jardir)%g' \
		$(srcdir)/buildscripts/launchers/micromanager.in >$@
	chmod +x $@

CLEANFILES = buildscripts/launchers/micromanager

# Note: The dependencies between MMCOREJ_DIR and JAVA_APP_DIRS is handled in
# configure. The same should be done for MMCORE_DIR and MMCORE{J,PY}_DIR. Also,
# building of DeviceAdapters could be made optional.
SUBDIRS = MMDevice $(MMCORE_DIR) $(MMCOREJ_DIR) $(MMCOREPY_DIR) $(JAVA_APP_DIRS) DeviceAdapters $(SECRETDEVICEADAPTERS) bindist

#TODO: install an `mmimagej' script to start MM inside ImageJ
install-ijplugin:
	@if test -z "$$imagejdir"; then \
		echo "Please run:" 1>&2; \
		echo "  make imagejdir=DESTDIR $@" 1>&2; \
		echo "with an appropriate DESTDIR" 1>&2; \
	else \
		$(MAKE) pkglibdir=$(imagejdir) pkgdatadir=$(imagejdir) jardir=$(imagejdir)/plugins/Micro-Manager bindir=$(imagejdir) install; \
		rm -f $(imagejdir)/*.la; \
		rm -f $(imagejdir)/plugins/Micro-Manager/ij.jar; \
		rm -f $(imagejdir)/micromanager; \
	fi

dox:
	test -d $(srcdir)/doxygen/out/MMDevice || mkdir $(srcdir)/doxygen/out/MMDevice
	rm -rf $(srcdir)/doxygen/out/MMDevice/*
	doxygen doxygen/MMDevice
	test -d $(srcdir)/doxygen/out/MMCore || mkdir $(srcdir)/doxygen/out/MMCore
	rm -rf $(srcdir)/doxygen/out/MMCore/*
	doxygen doxygen/MMCore
