
/**
 * BFCorrectorFrame.java
 * 
 *  Plugin for flatfield and background correction
 *  
 *
 * 
 * 
 * Nico Stuurman, copyright UCSF, 2012
 *  
 * LICENSE:      This file is distributed under the BSD license.
 *               License text is included with the source distribution.
 *
 *               This file is distributed in the hope that it will be useful,
 *               but WITHOUT ANY WARRANTY; without even the implied warranty
 *               of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 *               IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 *               CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 *               INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES.
 */

package org.micromanager.bfcorrector;

import ij.ImagePlus;
import java.io.File;
import mmcorej.CMMCore;

import java.text.NumberFormat;

import java.util.prefs.Preferences;

import org.micromanager.api.AcquisitionEngine;
import org.micromanager.api.ScriptInterface;
import org.micromanager.utils.FileDialogs;
import org.micromanager.utils.FileDialogs.FileType;


/**
 *
 * @author nico
 */
public class BFCorrectorFrame extends javax.swing.JFrame {
   private final ScriptInterface gui_;
   private final CMMCore core_;
   private Preferences prefs_;
   
   private NumberFormat nf_;

   private int frameXPos_ = 100;
   private int frameYPos_ = 100;
   
   private final BFProcessor processor_;

   private static final String FRAMEXPOS = "FRAMEXPOS";
   private static final String FRAMEYPOS = "FRAMEYPOS";
   private static final String FLATFIELDFILENAME = "FlatfieldFileName";
   private final String[] IMAGESUFFIXES = {"tif", "tiff", "jpg", "png"};
   private String flatfieldFileName_;


    /** 
    * Constructor
    * 
    * @param gui - Reference to MM script interface
    */
    public BFCorrectorFrame(ScriptInterface gui) {
       gui_ = gui;
       core_ = gui_.getMMCore();
       nf_ = NumberFormat.getInstance();
       prefs_ = Preferences.userNodeForPackage(this.getClass());

       initComponents();

       setLocation(frameXPos_, frameYPos_);

       setBackground(gui_.getBackgroundColor());
       
       processor_ = new BFProcessor();
       
       AcquisitionEngine eng = gui_.getAcquisitionEngine();
       eng.addImageProcessor(processor_);
       

    }
    
    private void processFlatFieldImage(String fileName) {
       ij.io.Opener opener = new ij.io.Opener();
       
       ImagePlus ip = opener.openImage(fileName);
       if (ip == null)
          return;
       
       processor_.setFlatField(ip);
       
       
       flatfieldFileName_ = fileName;
       flatFieldTextField_.setText(flatfieldFileName_);
       prefs_.put(FLATFIELDFILENAME, flatfieldFileName_);
       
       
       
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
   //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        flatFieldTextField_ = new javax.swing.JTextField();
        flatFieldButton_ = new javax.swing.JButton();
        backGroundTextField_ = new javax.swing.JTextField();
        backGroundButton_ = new javax.swing.JButton();

        setTitle("BFCorrector Plugin");
        setLocationByPlatform(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                onWindowClosing(evt);
            }
        });

        jLabel1.setText("Background");

        jLabel2.setText("Flatfield");

        flatFieldTextField_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flatFieldTextField_ActionPerformed(evt);
            }
        });

        flatFieldButton_.setText("...");
        flatFieldButton_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flatFieldButton_ActionPerformed(evt);
            }
        });

        backGroundTextField_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backGroundTextField_ActionPerformed(evt);
            }
        });

        backGroundButton_.setText("...");
        backGroundButton_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backGroundButton_ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(backGroundTextField_, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backGroundButton_, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(40, 40, 40)
                        .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addContainerGap(278, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(flatFieldTextField_, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(flatFieldButton_, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(40, 40, 40))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addContainerGap(255, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(flatFieldTextField_, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(flatFieldButton_))
                .add(34, 34, 34)
                .add(jLabel1)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(backGroundTextField_, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(backGroundButton_))))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  
    /**
     * When window closes, take the opportunity to save settings to Preferences
     * @param evt 
     */
    private void onWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onWindowClosing
       prefs_.putInt(FRAMEXPOS, (int) getLocation().getX());
       prefs_.putInt(FRAMEYPOS, (int) getLocation().getY());

    }//GEN-LAST:event_onWindowClosing

   private void flatFieldTextField_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flatFieldTextField_ActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_flatFieldTextField_ActionPerformed

   private void flatFieldButton_ActionPerformed(java.awt.event.ActionEvent evt) {                                                 
      File f = FileDialogs.openFile(this, "Flatfield image", 
              new FileType("MMAcq", "Flatfield image",
                      flatfieldFileName_, true, IMAGESUFFIXES ) );
      if (f != null) {
         processFlatFieldImage(f.getAbsolutePath());
         
      }   
      
   }
 
   private void backGroundTextField_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backGroundTextField_ActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_backGroundTextField_ActionPerformed

   private void backGroundButton_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backGroundButton_ActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_backGroundButton_ActionPerformed

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backGroundButton_;
    private javax.swing.JTextField backGroundTextField_;
    private javax.swing.JButton flatFieldButton_;
    private javax.swing.JTextField flatFieldTextField_;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

}
