# This file is part of a progressive rewrite of the GNU (autotools) build
# scripts. Please do not modify this file. Instead, please modify the legacy
# build files (without the .nextgen suffix). Changes to legacy files will be
# automatically detected and manually applied to the next-gen files.
# - Mark Tsuchida
#
# %nextgen_build_filename = mm_check_lib.m4

# Author: Mark Tsuchida
# Copyright: University of California, San Francisco, 2014
# License: BSD

# TODO Support for C++ libraries, with CXXFLAGS, CXXCPPFLAGS (but most of the
# libraries we use are C libraries)

# $1 - flag var prefix, e.g. LIBFOO
# $2 - display name, e.g. libfoo
# $3 - variable name suffix, e.g. libfoo (may contain underscores)
# $4 - include directory to prepend to CPPFLAGS (TODO: maybe support multiple)
# $5 - library directory to prepend to LDFLAGS (TODO: maybe support multiple)
# $6 - default library flags, e.g. -lfoo
# $7 - header to check for, e.g. foo/foo.h
# $8 - library function to check for, e.g. foo_init

# Output variables
# have_$3 (e.g. have_libfoo) - yes or no
# $1_CPPFLAGS (e.g. LIBFOO_CPPFLAGS)
# $1_CFLAGS (e.g. LIBFOO_CFLAGS)
# $1_LDFLAGS (e.g. LIBFOO_LDFLAGS)
# $1_LIBS (e.g. LIBFOO_LIBS)

AC_DEFUN([MM_CHECK_LIB], [
	MM_LIB_CHECK_ARG_VARS([$1], [$2], [have_$3=yes], [
      MM_LIB_SET_DIR_FLAGS([$1], [$4], [$5])
      $1_LIBS="$6"
      MM_LIB_IFELSE([$1], [$2], [], [$7], [$8], [have_$3=yes], [have_$3=no])
      AS_IF([test "x$have_$3" = xno], [MM_LIB_CLEAR_FLAGS([$1])])
   ])
])
