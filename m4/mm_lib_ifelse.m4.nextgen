# This file is part of a progressive rewrite of the GNU (autotools) build
# scripts. Please do not modify this file. Instead, please modify the legacy
# build files (without the .nextgen suffix). Changes to legacy files will be
# automatically detected and manually applied to the next-gen files.
# - Mark Tsuchida
#
# %nextgen_build_filename = mm_lib_ifelse.m4

# Author: Mark Tsuchida
# Copyright: University of California, San Francisco, 2014
# License: BSD

# MM_LIB_IFELSE(VAR-PREFIX, NAME, [MSG-SUFFIX], [HEADER], [FUNCTION], [ACTION-IF],
# [ACTION-IF-NOT])

# VAR-PREFIX - flag var prefix, e.g. LIBFOO
# NAME - display name, e.g. libfoo
# MSG-SUFFIX - test location message, e.g. `with flags from pkg-config'
# HEADER - header to check for, e.g. foo/foo.h
# FUNCTION - library function to check for, e.g. foo_init

# Used variables (not modified by MM_TEST_LIB)
# $1_CPPFLAGS (e.g. LIBFOO_CPPFLAGS)
# $1_CFLAGS (e.g. LIBFOO_CFLAGS)
# $1_LDFLAGS (e.g. LIBFOO_LDFLAGS)
# $1_LIBS (e.g. LIBFOO_LIBS)

# TODO Support for C++ libraries, with CXXFLAGS, CXXCPPFLAGS (but most of the
# libraries we use are C libraries)

AC_DEFUN([MM_LIB_IFELSE], [
   mm_lib_ifelse_have_$1=

   # Push state
   AC_LANG_PUSH([C])
   mm_lib_ifelse_$1_old_cppflags="$CPPFLAGS"
   mm_lib_ifelse_$1_old_cflags="$CFLAGS"
   mm_lib_ifelse_$1_old_ldflags="$LDFLAGS"
   mm_lib_ifelse_$1_old_libs="$LIBS"
   CPPFLAGS="$$1_CPPFLAGS $mm_lib_ifelse_$1_old_cppflags"
   CFLAGS="$$1_CFLAGS $mm_lib_ifelse_$1_old_cflags"
   LDFLAGS="$$1_LDFLAGS $mm_lib_ifelse_$1_old_ldflags"
   LIBS="$$1_LIBS $mm_lib_ifelse_$1_old_libs"
   # End push state

   m4_ifval([$4], [
      AC_MSG_CHECKING([for $4 $3])
      AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[#include <][$4][>]])],
      [
         AC_MSG_RESULT([yes])
      ],
      [
         AC_MSG_RESULT([no])
         mm_lib_ifelse_have_$1=no
      ])
   ])

   AS_IF([test "x$mm_lib_ifelse_have_$1" != xno],
   [
      m4_ifval([$5], [
         AC_MSG_CHECKING([for $5 in $2 $3])
         AC_LINK_IFELSE([AC_LANG_CALL([], [$5])],
         [
            AC_MSG_RESULT([yes])
            mm_lib_ifelse_have_$1=yes
         ],
         [
            AC_MSG_RESULT([no])
            mm_lib_ifelse_have_$1=no
         ])
      ],
      [
         mm_lib_ifelse_have_$1=no
      ])
   ])

   # Pop state
   CPPFLAGS="$mm_lib_ifelse_$1_old_cppflags"
   CFLAGS="$mm_lib_ifelse_$1_old_cflags"
   LDFLAGS="$mm_lib_ifelse_$1_old_ldflags"
   LIBS="$mm_lib_ifelse_$1_old_libs"
   AC_LANG_POP([C])
   # End pop state

   AS_IF([test "x$mm_lib_ifelse_have_$1" = xyes], [$6], [$7])
])
])
